---
name: publish package to github packages
run-name: "${{ github.actor }} is publishing a python package: ${{ github.repository }} @ ${{ github.ref_name }}"

on:
  push:
    branches:
      - main
    paths:
      - pyproject.toml
      - uv.lock
      - "src/**"
      - ".github/workflows/publish-package.yaml"

permissions:
  contents: read
  packages: write

jobs:
  build-and-publish:
    name: Build distribution
    runs-on: ubuntu-latest
    env:
      UV_CACHE_DIR: /tmp/.uv-cache

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.14"
          enable-cache: true

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Generate sprite ansi files
        run: ./generate-sprite-ansi-files.sh

      - name: Build the distribution packages
        run: uv build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      # do stuff here

      - name: Minimize uv cache
        run: uv cache prune --ci
